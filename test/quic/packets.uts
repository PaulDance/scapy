% Tests for QUIC packets
~ parsing
+ Parse Initial and Retry packets
= Parse client Initial packet
from binascii import unhexlify
from scapy.layers.quic import QUIC_VERSION
from scapy.layers.quic.packets import QuicInitial, QuicRetry
from test.quic import SCID, DCID, CLIENT_INITIAL_BYTES, SERVER_INITIAL_BYTES

client_initial = QuicInitial(CLIENT_INITIAL_BYTES)
assert client_initial.header_form == 1
assert client_initial.fixed_bit == 1
assert client_initial.long_packet_type == 0
assert client_initial.reserved_bits == 0
assert client_initial.version == QUIC_VERSION
assert client_initial.destination_connection_id_length == 8
assert client_initial.destination_connection_id == DCID
assert client_initial.source_connection_id_length == 0
assert client_initial.source_connection_id == b""
assert client_initial.token_length == 0
assert client_initial.token == b""
assert client_initial.length == 1182
assert client_initial.get_packet_number_length() == 4
assert client_initial.packet_number == unhexlify("00000002")

= Parse server Initial packet
server_initial = QuicInitial(SERVER_INITIAL_BYTES)
assert server_initial.header_form == 1
assert server_initial.fixed_bit == 1
assert server_initial.long_packet_type == 0
assert server_initial.reserved_bits == 0
assert server_initial.version == QUIC_VERSION
assert server_initial.destination_connection_id_length == 0
assert server_initial.destination_connection_id == b""
assert server_initial.source_connection_id_length == 8
assert server_initial.source_connection_id == SCID
assert server_initial.token_length == 0
assert server_initial.token == b""
assert server_initial.length == 117
assert server_initial.get_packet_number_length() == 2
assert server_initial.packet_number == unhexlify("0001")

= Parse server Retry packet
server_retry = QuicRetry(unhexlify(
    "ff000000010008f067a5502a4262b5746f6b656e04a265ba2eff4d829058fb3f"
    "0f2496ba"
))
assert server_retry.header_form == 1
assert server_retry.fixed_bit == 1
assert server_retry.long_packet_type == 3
assert server_retry.unused == 15  # Server-chosen, client must ignore.
assert server_retry.version == QUIC_VERSION
assert server_retry.destination_connection_id_length == 0
assert server_retry.destination_connection_id == b""
assert server_retry.source_connection_id_length == 8
assert server_retry.source_connection_id == SCID
assert server_retry.retry_token == unhexlify("746f6b656e")
assert server_retry.retry_integrity_tag == unhexlify("04a265ba2eff4d829058fb3f0f2496ba")
